{
  "Kayle": {
    "P": {
      "type": "magic",
      "area": true,
      "min": [
        "0",
        "0",
        "0",
        "0",
        "0",
        "0",
        "0",
        "0",
        "0",
        "0",
        "(35 + (0.1 * bonusAD) + (0.25 * currentAP)) * magicMod",
        "(35 + (0.1 * bonusAD) + (0.25 * currentAP)) * magicMod",
        "(35 + (0.1 * bonusAD) + (0.25 * currentAP)) * magicMod",
        "(35 + (0.1 * bonusAD) + (0.25 * currentAP)) * magicMod",
        "(35 + (0.1 * bonusAD) + (0.25 * currentAP)) * magicMod",
        "(35 + (0.1 * bonusAD) + (0.25 * currentAP)) * magicMod",
        "(35 + (0.1 * bonusAD) + (0.25 * currentAP)) * magicMod",
        "(35 + (0.1 * bonusAD) + (0.25 * currentAP)) * magicMod"
      ],
      "max": []
    },
    "Q": {
      "type": "magic",
      "area": true,
      "min": [
        "(60 + (0.5 * currentAP) + (0.6 * bonusAD)) * magicMod",
        "(100 + (0.5 * currentAP) + (0.6 * bonusAD)) * magicMod",
        "(140 + (0.5 * currentAP) + (0.6 * bonusAD)) * magicMod",
        "(180 + (0.5 * currentAP) + (0.6 * bonusAD)) * magicMod",
        "(220 + (0.5 * currentAP) + (0.6 * bonusAD)) * magicMod"
      ],
      "max": []
    },
    "E": {
      "type": "magic",
      "area": true,
      "min": [
        "(15 + (0.25 * currentAP) + (0.1 * bonusAD)) * magicMod",
        "(20 + (0.25 * currentAP) + (0.1 * bonusAD)) * magicMod",
        "(25 + (0.25 * currentAP) + (0.1 * bonusAD)) * magicMod",
        "(30 + (0.25 * currentAP) + (0.1 * bonusAD)) * magicMod",
        "(35 + (0.25 * currentAP) + (0.1 * bonusAD)) * magicMod"
      ],
      "max": [
        "(15 + (0.25 * currentAP) + (0.1 * bonusAD) + ((0.08 + 15 * currentAP / 100000) * expectedHealth)) * magicMod",
        "(20 + (0.25 * currentAP) + (0.1 * bonusAD) + ((0.085 + 15 * currentAP / 100000) * expectedHealth)) * magicMod",
        "(25 + (0.25 * currentAP) + (0.1 * bonusAD) + ((0.09 + 15 * currentAP / 100000) * expectedHealth)) * magicMod",
        "(30 + (0.25 * currentAP) + (0.1 * bonusAD) + ((0.95 + 15 * currentAP / 100000) * expectedHealth)) * magicMod",
        "(35 + (0.25 * currentAP) + (0.1 * bonusAD) + ((0.1 + 15 * currentAP / 100000) * expectedHealth)) * magicMod"
      ]
    },
    "R": {
      "type": "magic",
      "area": true,
      "min": [
        "(200 + bonusAD + (0.7 * currentAP)) * magicMod",
        "(300 + bonusAD + (0.7 * currentAP)) * magicMod",
        "(400 + bonusAD + (0.7 * currentAP)) * magicMod"
      ],
      "max": []
    }
  }
}