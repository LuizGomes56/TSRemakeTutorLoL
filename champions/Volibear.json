{
  "Volibear": {
    "P": {
      "type": "magic",
      "area": false,
      "min": [
        "(11 + (0.50 * currentAP)) * magicMod",
        "(12 + (0.50 * currentAP)) * magicMod",
        "(13 + (0.50 * currentAP)) * magicMod",
        "(15 + (0.50 * currentAP)) * magicMod",
        "(17 + (0.50 * currentAP)) * magicMod",
        "(19 + (0.50 * currentAP)) * magicMod",
        "(22 + (0.50 * currentAP)) * magicMod",
        "(25 + (0.50 * currentAP)) * magicMod",
        "(28 + (0.50 * currentAP)) * magicMod",
        "(31 + (0.50 * currentAP)) * magicMod",
        "(34 + (0.50 * currentAP)) * magicMod",
        "(37 + (0.50 * currentAP)) * magicMod",
        "(40 + (0.50 * currentAP)) * magicMod",
        "(44 + (0.50 * currentAP)) * magicMod",
        "(48 + (0.50 * currentAP)) * magicMod",
        "(52 + (0.50 * currentAP)) * magicMod",
        "(56 + (0.50 * currentAP)) * magicMod",
        "(60 + (0.50 * currentAP)) * magicMod"
      ],
      "max": []
    },
    "Q": {
      "type": "physical",
      "area": false,
      "min": [
        "((10 + (1.2 * bonusAD)) * physicalMod)",
        "((30 + (1.2 * bonusAD)) * physicalMod)",
        "((50 + (1.2 * bonusAD)) * physicalMod)",
        "((70 + (1.2 * bonusAD)) * physicalMod)",
        "((90 + (1.2 * bonusAD)) * physicalMod)"
      ],
      "max": []
    },
    "W": {
      "type": "physical",
      "area": false,
      "min": [
        "((5 + 1.5 * currentAD + (0.06 * bonusHP)) * physicalMod)",
        "((30 + 1.5 * currentAD + (0.06 * bonusHP)) * physicalMod)",
        "((55 + 1.5 * currentAD + (0.06 * bonusHP)) * physicalMod)",
        "((70 + 1.5 * currentAD + (0.06 * bonusHP)) * physicalMod)",
        "((95 + 1.5 * currentAD + (0.06 * bonusHP)) * physicalMod)"
      ],
      "max": []
    },
    "E": {
      "type": "magic",
      "area": true,
      "min": [
        "((80 + (0.8 * currentAP + (0.11 * expectedHealth))) * magicMod)",
        "((110 + (0.8 * currentAP + (0.12 * expectedHealth))) * magicMod)",
        "((140 + (0.8 * currentAP + (0.13 * expectedHealth))) * magicMod)",
        "((170 + (0.8 * currentAP + (0.14 * expectedHealth))) * magicMod)",
        "((200 + (0.8 * currentAP + (0.15 * expectedHealth))) * magicMod)"
      ],
      "max": []
    },
    "R": {
      "type": "physical",
      "area": true,
      "min": [
        "((300 + (1.25 * currentAP + (2.5 * bonusAD))) * physicalMod)",
        "((500 + (1.25 * currentAP + (2.5 * bonusAD))) * physicalMod)",
        "((700 + (1.25 * currentAP + (2.5 * bonusAD))) * physicalMod)"
      ],
      "max": []
    }
  }
}