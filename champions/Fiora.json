{
  "Fiora": {
    "P": {
      "type": "true",
      "area": false,
      "min": [
        "(0.03 + (0.0004 * bonusAD)) * expectedHealth",
        "(0.03 + (0.0004 * bonusAD)) * expectedHealth",
        "(0.03 + (0.0004 * bonusAD)) * expectedHealth",
        "(0.03 + (0.0004 * bonusAD)) * expectedHealth",
        "(0.03 + (0.0004 * bonusAD)) * expectedHealth",
        "(0.03 + (0.0004 * bonusAD)) * expectedHealth",
        "(0.03 + (0.0004 * bonusAD)) * expectedHealth",
        "(0.03 + (0.0004 * bonusAD)) * expectedHealth",
        "(0.03 + (0.0004 * bonusAD)) * expectedHealth",
        "(0.03 + (0.0004 * bonusAD)) * expectedHealth",
        "(0.03 + (0.0004 * bonusAD)) * expectedHealth",
        "(0.03 + (0.0004 * bonusAD)) * expectedHealth",
        "(0.03 + (0.0004 * bonusAD)) * expectedHealth",
        "(0.03 + (0.0004 * bonusAD)) * expectedHealth",
        "(0.03 + (0.0004 * bonusAD)) * expectedHealth",
        "(0.03 + (0.0004 * bonusAD)) * expectedHealth",
        "(0.03 + (0.0004 * bonusAD)) * expectedHealth",
        "(0.03 + (0.0004 * bonusAD)) * expectedHealth"
      ],
      "max": []
    },
    "Q": {
      "type": "physical",
      "area": false,
      "min": [
        "(70 + (0.9 * bonusAD)) * physicalMod",
        "(80 + (0.95 * bonusAD)) * physicalMod",
        "(90 + bonusAD) * physicalMod",
        "(100 + (1.05 * bonusAD)) * physicalMod",
        "(110 + (1.1 * bonusAD)) * physicalMod"
      ],
      "max": []
    },
    "W": {
      "type": "magic",
      "area": true,
      "min": [
        "(110 + currentAP) * magicMod",
        "(150 + currentAP) * magicMod",
        "(190 + currentAP) * magicMod",
        "(230 + currentAP) * magicMod",
        "(270 + currentAP) * magicMod"
      ],
      "max": []
    },
    "E": {
      "type": "physical",
      "area": false,
      "min": [
        "(currentAD * 1.6) * physicalMod",
        "(currentAD * 1.7) * physicalMod",
        "(currentAD * 1.8) * physicalMod",
        "(currentAD * 1.9) * physicalMod",
        "(currentAD * 2) * physicalMod"
      ],
      "max": []
    },
    "R": {
      "type": "true",
      "area": false,
      "min": [
        "(0.03 + (0.0004 * bonusAD)) * expectedHealth",
        "(0.03 + (0.0004 * bonusAD)) * expectedHealth",
        "(0.03 + (0.0004 * bonusAD)) * expectedHealth"
      ],
      "max": [
        "4 * (0.03 + (0.0004 * bonusAD)) * expectedHealth",
        "4 * (0.03 + (0.0004 * bonusAD)) * expectedHealth",
        "4 * (0.03 + (0.0004 * bonusAD)) * expectedHealth"
      ]
    }
  }
}