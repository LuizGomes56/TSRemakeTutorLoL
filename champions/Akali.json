{
  "Akali": {
    "P": {
      "type": "magic",
      "area": false,
      "min": [
        "(35 + (0.6 * bonusAD) + (0.6 * currentAP)) * magicMod",
        "(38 + (0.6 * bonusAD) + (0.6 * currentAP)) * magicMod",
        "(41 + (0.6 * bonusAD) + (0.6 * currentAP)) * magicMod",
        "(44 + (0.6 * bonusAD) + (0.6 * currentAP)) * magicMod",
        "(47 + (0.6 * bonusAD) + (0.6 * currentAP)) * magicMod",
        "(50 + (0.6 * bonusAD) + (0.6 * currentAP)) * magicMod",
        "(53 + (0.6 * bonusAD) + (0.6 * currentAP)) * magicMod",
        "(62 + (0.6 * bonusAD) + (0.6 * currentAP)) * magicMod",
        "(71 + (0.6 * bonusAD) + (0.6 * currentAP)) * magicMod",
        "(80 + (0.6 * bonusAD) + (0.6 * currentAP)) * magicMod",
        "(89 + (0.6 * bonusAD) + (0.6 * currentAP)) * magicMod",
        "(98 + (0.6 * bonusAD) + (0.6 * currentAP)) * magicMod",
        "(107 + (0.6 * bonusAD) + (0.6 * currentAP)) * magicMod",
        "(122 + (0.6 * bonusAD) + (0.6 * currentAP)) * magicMod",
        "(137 + (0.6 * bonusAD) + (0.6 * currentAP)) * magicMod",
        "(152 + (0.6 * bonusAD) + (0.6 * currentAP)) * magicMod",
        "(167 + (0.6 * bonusAD) + (0.6 * currentAP)) * magicMod",
        "(182 + (0.6 * bonusAD) + (0.6 * currentAP)) * magicMod"
      ],
      "max": []
    },
    "Q": {
      "type": "magic",
      "area": true,
      "min": [
        "(45 + (0.6 * currentAP) + (0.65 * currentAD)) * magicMod",
        "(70 + (0.6 * currentAP) + (0.65 * currentAD)) * magicMod",
        "(95 + (0.6 * currentAP) + (0.65 * currentAD)) * magicMod",
        "(120 + (0.6 * currentAP) + (0.65 * currentAD)) * magicMod",
        "(145 + (0.6 * currentAP) + (0.65 * currentAD)) * magicMod"
      ],
      "max": []
    },
    "E": {
      "type": "magic",
      "area": false,
      "min": [
        "(30 + (0.36 * currentAP) + (0.255 * currentAD)) * magicMod",
        "(56.25 + (0.36 * currentAP) + (0.255 * currentAD)) * magicMod",
        "(82.5 + (0.36 * currentAP) + (0.255 * currentAD)) * magicMod",
        "(108.75 + (0.36 * currentAP) + (0.255 * currentAD)) * magicMod",
        "(135 + (0.36 * currentAP) + (0.255 * currentAD)) * magicMod"
      ],
      "max": [
        "(100 + (1.2 * currentAP) + (0.85 * currentAD)) * magicMod",
        "(187.5 + (1.2 * currentAP) + (0.85 * currentAD)) * magicMod",
        "(275 + (1.2 * currentAP) + (0.85 * currentAD)) * magicMod",
        "(362.5 + (1.2 * currentAP) + (0.85 * currentAD)) * magicMod",
        "(450 + (1.2 * currentAP) + (0.85 * currentAD)) * magicMod"
      ]
    },
    "R": {
      "type": "magic",
      "area": true,
      "min": [
        "(80 + (0.5 * bonusAD) + (0.3 * currentAP)) * magicMod",
        "(220 + (0.5 * bonusAD) + (0.3 * currentAP)) * magicMod",
        "(360 + (0.5 * bonusAD) + (0.3 * currentAP)) * magicMod"
      ],
      "max": [
        "(180 + (0.9 * currentAP)) * magicMod",
        "(390 + (0.9 * currentAP)) * magicMod",
        "(600 + (0.9 * currentAP)) * magicMod"
      ]
    }
  }
}