{
  "Ekko": {
    "P": {
      "type": "magic",
      "area": false,
      "min": [
        "(30 + (0.9 * currentAP)) * magicMod",
        "(40 + (0.9 * currentAP)) * magicMod",
        "(50 + (0.9 * currentAP)) * magicMod",
        "(60 + (0.9 * currentAP)) * magicMod",
        "(70 + (0.9 * currentAP)) * magicMod",
        "(80 + (0.9 * currentAP)) * magicMod",
        "(85 + (0.9 * currentAP)) * magicMod",
        "(90 + (0.9 * currentAP)) * magicMod",
        "(95 + (0.9 * currentAP)) * magicMod",
        "(100 + (0.9 * currentAP)) * magicMod",
        "(105 + (0.9 * currentAP)) * magicMod",
        "(110 + (0.9 * currentAP)) * magicMod",
        "(115 + (0.9 * currentAP)) * magicMod",
        "(120 + (0.9 * currentAP)) * magicMod",
        "(125 + (0.9 * currentAP)) * magicMod",
        "(130 + (0.9 * currentAP)) * magicMod",
        "(135 + (0.9 * currentAP)) * magicMod",
        "(140 + (0.9 * currentAP)) * magicMod"
      ],
      "max": []
    },
    "Q": {
      "type": "magic",
      "area": true,
      "min": [
        "(70 + (0.3 * currentAP)) * magicMod",
        "(85 + (0.3 * currentAP)) * magicMod",
        "(100 + (0.3 * currentAP)) * magicMod",
        "(115 + (0.3 * currentAP)) * magicMod",
        "(130 + (0.3 * currentAP)) * magicMod"
      ],
      "max": [
        "(110 + (0.9 * currentAP)) * magicMod",
        "(150 + (0.9 * currentAP)) * magicMod",
        "(190 + (0.9 * currentAP)) * magicMod",
        "(230 + (0.9 * currentAP)) * magicMod",
        "(270 + (0.9 * currentAP)) * magicMod"
      ]
    },
    "W": {
      "type": "magic",
      "area": false,
      "min": [
        "(0.03 + 3 * currentAP / 10000) * 0.7 * expectedHealth * magicMod",
        "(0.03 + 3 * currentAP / 10000) * 0.7 * expectedHealth * magicMod",
        "(0.03 + 3 * currentAP / 10000) * 0.7 * expectedHealth * magicMod",
        "(0.03 + 3 * currentAP / 10000) * 0.7 * expectedHealth * magicMod",
        "(0.03 + 3 * currentAP / 10000) * 0.7 * expectedHealth * magicMod"
      ],
      "max": [
        "(0.03 + 3 * currentAP / 10000) * expectedHealth * magicMod",
        "(0.03 + 3 * currentAP / 10000) * expectedHealth * magicMod",
        "(0.03 + 3 * currentAP / 10000) * expectedHealth * magicMod",
        "(0.03 + 3 * currentAP / 10000) * expectedHealth * magicMod",
        "(0.03 + 3 * currentAP / 10000) * expectedHealth * magicMod"
      ]
    },
    "E": {
      "type": "magic",
      "area": false,
      "min": [
        "(50 + (0.4 * currentAP)) * magicMod",
        "(75 + (0.4 * currentAP)) * magicMod",
        "(100 + (0.4 * currentAP)) * magicMod",
        "(125 + (0.4 * currentAP)) * magicMod",
        "(150 + (0.4 * currentAP)) * magicMod"
      ],
      "max": []
    },
    "R": {
      "type": "magic",
      "area": true,
      "min": [
        "(200 + (1.75 * currentAP)) * magicMod",
        "(350 + (1.75 * currentAP)) * magicMod",
        "(500 + (1.75 * currentAP)) * magicMod"
      ],
      "max": []
    }
  }
}